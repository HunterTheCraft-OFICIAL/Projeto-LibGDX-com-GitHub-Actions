name: Build LibGDX Environment

on: [push] # Ou outro evento que você preferir (por exemplo, workflow_dispatch para execução manual)

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Java
      uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: '17' # Ou outra versão compatível

    - name: Download LibGDX Setup
      run: wget https://github.com/libgdx/libgdx/releases/download/1.12.1/gdx-setup.jar # Verifique a versão mais recente em https://libgdx.com/download/

    - name: Make script executable
      run: chmod +x build_env.sh

    - name: Run build script
      id: build_script
      run: ./build_env.sh

    - name: Check for APK ZIP
      id: check_apk
      run: |
        if [ -f meu-jogo-debug.apk.zip ]; then
          echo "APK_EXISTS=true" >> "$GITHUB_OUTPUT"
        else
          echo "APK_EXISTS=false" >> "$GITHUB_OUTPUT"
        fi

    - name: Upload Project ZIP
      uses: actions/upload-artifact@v4
      with:
        name: project-zip
        path: ${{ steps.build_script.outputs.LOG_FILE == '' && 'meu-jogo-libgdx.zip' || 'meu-jogo-libgdx.zip' }}

    - name: Upload APK ZIP (se gerado)
      if: steps.build_script.outcome == 'success' && steps.build_script.outputs.LOG_FILE == '' && steps.check_apk.outputs.APK_EXISTS == 'true'
      uses: actions/upload-artifact@v4
      with:
        name: apk-zip
        path: meu-jogo-debug.apk.zip

    - name: Upload Logs
      uses: actions/upload-artifact@v4
      with:
        name: build-logs
        path: ${{ steps.build_script.outputs.LOG_FILE }}