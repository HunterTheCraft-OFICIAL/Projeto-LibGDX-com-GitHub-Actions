name: Build LibGDX Environment (Docker)

on: [push]

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest
    container:
      image: seu-usuario/gdx-liftoff-env:latest # Substitua pelo seu usuário/imagem:tag

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Start Xvfb
      run: Xvfb :99 -screen 0 1280x1024x24 &

    - name: Wait for Xvfb
      run: sleep 5

    - name: Make script executable
      run: chmod +x build_env.sh

    - name: Run build script and collect info
      id: build_script
      run: |
        export DISPLAY=:99
        ./build_env.sh > build.log 2>&1
        cat build.log
      env:
        ANDROID_SDK_ROOT: /opt/android-sdk # Garante que a variável esteja definida no ambiente

    - name: Upload Log File
      uses: actions/upload-artifact@v4
      with:
        name: build-log
        path: build.log

    - name: Check for Project ZIP
      id: check_project_zip
      run: |
        if [ -f meu-jogo-libgdx.zip ]; then
          echo "PROJECT_ZIP_EXISTS=true" >> "$GITHUB_OUTPUT"
        else
          echo "PROJECT_ZIP_EXISTS=false" >> "$GITHUB_OUTPUT"
        fi

    - name: Upload Project ZIP (se criado)
      if: steps.build_script.outcome == 'success' && steps.check_project_zip.outputs.PROJECT_ZIP_EXISTS == 'true'
      uses: actions/upload-artifact@v4
      with:
        name: project-zip
        path: meu-jogo-libgdx.zip

    - name: Check for APK
      id: check_apk
      run: |
        if [ -f meu-jogo-debug.apk ]; then
          echo "APK_EXISTS=true" >> "$GITHUB_OUTPUT"
        else
          echo "APK_EXISTS=false" >> "$GITHUB_OUTPUT"
        fi

    - name: Upload APK (se gerado)
      if: steps.build_script.outcome == 'success' && steps.check_apk.outputs.APK_EXISTS == 'true'
      uses: actions/upload-artifact@v4
      with:
        name: debug-apk
        path: meu-jogo-debug.apk

    - name: Upload Liftoff JAR
      uses: actions/upload-artifact@v4
      with:
        name: liftoff-jar
        path: gdx-setup.jar

    - name: Create Release (with Log Mention)
      if: always()
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.run_id }}-docker
        release_name: Build Log (Docker) - ${{ github.run_id }}
        body: |
          Logs da execução do workflow com Docker: ${{ github.run_id }}

          Você pode encontrar o arquivo de log completo como um artefato ('build-log') na página desta execução do workflow.
          O ZIP do projeto (se criado) está disponível como 'project-zip'.
          O APK de debug (se gerado) está disponível como 'debug-apk'.
          O JAR do Liftoff também está disponível como 'liftoff-jar'.
        draft: false
        prerelease: true
